#-*-makefile-*-
UNAME = $(shell uname -s)

target=etsiop

# set up some paths
SRCPATH = ./src
LDFLAGS =
CFLAGS = 
MK_DIR := mkdir -p
######## Compiler definition #############
CC=gcc
CXX=g++
AR=ar
CFLAGS += -Wall -Wstrict-prototypes -Wmissing-prototypes
CC_DEP=g++

ifeq "$(INSURE)" "1"
CC=insure
CXX=insure
endif

### filename extension
lib=a
obj=o


####################  SET PATHES  ##########################
LIBPATH = ./lib/$(UNAME)

ifeq "$(WMOPS)" "1"
override CFLAGS += -DWMOPS
endif

ifeq "$(DEBUG)" "1"
override CFLAGS += -g
override LIBPATH := $(LIBPATH)_D
endif

ifneq "$(OPTIM)" ""
override CFLAGS += -O$(OPTIM) -fno-strength-reduce
override LIBPATH := $(LIBPATH)_O$(OPTIM)
endif

ifeq "$(INSURE)" "1"
override LIBPATH := $(LIBPATH)_I
endif

ifeq "$(LP_SBR_ONLY)" "1"
override CFLAGS += -DLP_SBR_ONLY
endif

OBJDIR = $(LIBPATH)/obj


###############################################################################
# here are the rules
$(OBJDIR)/%.o:	$(SRCPATH)/%.c
	$(CC) -c $(CFLAGS) $(INCDIR) -o $@ $<

$(OBJDIR)/%.o: 	$(SRCPATH)/%.cpp
	$(CXX) -c $(CFLAGS) $(INCDIR) -o $@ $<

# generate dependencies
$(OBJDIR)/%.d:	$(SRCPATH)/%.c
	$(CC_DEP) -MM $(CFLAGS) $(INCDIR) $< | sed 's§$(basename $(notdir $<))\.o§$(OBJDIR)/$*.o $(OBJDIR)/$*.d§g' > $@

# generate dependencies
$(OBJDIR)/%.d:	$(SRCPATH)/%.cpp
	$(CC_DEP) -MM $(CFLAGS) $(INCDIR) $< | sed 's§$(basename $(notdir $<))\.o§$(OBJDIR)/$*.o $(OBJDIR)/$*.d§g' > $@

